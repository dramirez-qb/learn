apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "learn.fullname" . }}
  labels:
{{ include "learn.labels" $ | indent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: gitops-k8s-learn
{{ include "learn.labels" $ | indent 6 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 2
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        app: gitops-k8s-learn
{{ include "learn.labels" $ | indent 8 }}
    spec:
      initContainers:
        - name: pull-secrets
          image: "busybox"
          imagePullPolicy: IfNotPresent
          command:
            - "busybox"
          args:
            - "wget"
            - "-O"
            - "/secrets/ultrasecret.json"
            - "https://httpbin.org/get?key=secret"
          env:
            - name: MY_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          envFrom:
            - configMapRef:
                name: {{ include "learn.fullname" . }}-config
          resources:
            limits:
              cpu: 5m
              memory: 16Mi
            requests:
              cpu: 5m
              memory: 16Mi
          volumeMounts:
            - mountPath: /secrets
              name: secrets
      containers:
        - name: {{ .Chart.Name }}-learn
          image: {{ .Values.image }}
          imagePullPolicy: {{ .Values.imageConfig.pullPolicy }}
          ports:
            - name: {{ .Chart.Name }}-web
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          - name: MY_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: USER
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          envFrom:
            - configMapRef:
                name: {{ include "learn.fullname" . }}-config
            - secretRef:
                name: {{ include "learn.fullname" . }}-secret
          readinessProbe:
            tcpSocket:
              port: {{ .Chart.Name }}-web
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Chart.Name }}-web
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 2
          volumeMounts:
            - mountPath: /secrets
              name: secrets
            - mountPath: /cache
              name: cache-volume
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      serviceAccountName: {{ include "learn.serviceAccountName" . }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: secrets
{{- if $.Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "learn.fullname" . }}-pvc
{{- else }}
          emptyDir: {}
{{- end }}
        - name: cache-volume
          emptyDir: {}
