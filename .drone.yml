---
kind: pipeline
type: docker
name: learn-app-development

environment:
  namespace: default

clone:
  depth: 50

steps:
  - name: fetch
    image: alpine/git
    commands:
      - git fetch --tags
      - rm -f .tags
      - printf "%s\n" ${DRONE_COMMIT_BRANCH/feature\//} > .tags
      - printf "%s\n" $(git log -n 1 --pretty=format:"%H") >> .tags
      - printf "Tags to build\n-------------\n%s\n" $(cat .tags)
      - printf "LABEL branch %s\n" ${DRONE_COMMIT_BRANCH} >> .tags

  - name: Run chart-testing (lint)
    image: dxas90/drone-helper
    commands:
      - sh -c "ct lint --config test/chart-testing.yaml"
    depends_on:
      - fetch

  - name: Go image (build)
    image: ghcr.io/finitum/drone-kaniko:0.7.0
    settings:
      skip_tls_verify: false # set to true for testing registries ONLY with self-signed certs
      build_args:
        - COMMIT_SHA=${DRONE_COMMIT_SHA}
        - COMMIT_AUTHOR_EMAIL=${DRONE_COMMIT_AUTHOR_EMAIL}
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      repo: dxas90/learn
      dockerfile: Dockerfile
      registry: harbor.dxas90.xyz
    depends_on:
      - Run chart-testing (lint)

  - name: Run Kustomize
    image: dxas90/drone-helper
    commands:
      - sh -c "cd k8s; kustomize edit set image dxas90/learn:$(git log -n 1 --pretty=format:"%H")"
    depends_on:
      - Go image (build)

image_pull_secrets:
  - dockerconfig

trigger:
  branch:
    - develop
    - feature/*
  event:
    - push
# services:
#   - name: docker
#     image: docker:dind
#     privileged: true
#     volumes:
#       - name: dockersock
#         path: /var/run

# volumes:
#   - name: dockersock
#     temp: {}
---
kind: pipeline
type: docker
name: learn-app-release

environment:
  namespace: default

clone:
  depth: 50

steps:
  - name: fetch
    image: alpine/git
    commands:
      - git fetch --tags
  - name: release
    image: golang
    environment:
      GITEA_TOKEN:
        from_secret: gitea_token
    volumes:
      - name: deps
        path: /go
    commands:
      - curl -sL https://git.io/goreleaser | bash
    when:
      event:
        - tag

image_pull_secrets:
  - dockerconfig

trigger:
  event:
    - push

volumes:
  #   - name: dockersock
  #     temp: {}
  - name: deps
    temp: {}
